/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.Grupo;
import modelo.Usuario;
import servicios.ServicioGrupos;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class VentanaGrupos extends javax.swing.JFrame {

    private final Usuario usuarioLogueado;
    private final ServicioGrupos servicioGrupos;
    private DefaultListModel<String> listModel;
    
    private java.util.List<Grupo> listaDeGruposCompleta;
    
    
    

    public VentanaGrupos(Usuario usuario) {
        this.usuarioLogueado = usuario;
        this.servicioGrupos = new ServicioGrupos();
        this.listModel = new DefaultListModel<>();
        initComponents();

        // Asignar el modelo a la JList
        listaGrupos.setModel(listModel);

        // Cargar los grupos al abrir la ventana
        cargarGrupos();
    }

    private void cargarGrupos() {
        try {
            listModel.clear(); // Limpiar la lista antes de cargar
            this.listaDeGruposCompleta = servicioGrupos.obtenerTodosLosGrupos();
            java.util.List<Grupo> grupos = servicioGrupos.obtenerTodosLosGrupos();
            for (Grupo grupo : this.listaDeGruposCompleta) {
                    listModel.addElement(grupo.getNombre()+ " - " + grupo.getDescripcion());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar los grupos: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonCrearGrupo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaGrupos = new javax.swing.JList<>();
        botonUnirse = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        botonCrearGrupo.setLabel("Crear Nuevo Grupo");
        botonCrearGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearGrupoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listaGrupos);

        botonUnirse.setText("Unirse");
        botonUnirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUnirseActionPerformed(evt);
            }
        });

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonCrearGrupo)
                        .addGap(42, 42, 42)
                        .addComponent(botonUnirse)
                        .addGap(86, 86, 86)
                        .addComponent(jButton1)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCrearGrupo)
                    .addComponent(botonUnirse)
                    .addComponent(jButton1))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearGrupoActionPerformed
        String nombreGrupo = JOptionPane.showInputDialog(this, "Introduce el nombre del nuevo grupo:");
        if (nombreGrupo != null && !nombreGrupo.trim().isEmpty()) {
            try {
                // Usamos una descripción por defecto para simplificar
                servicioGrupos.crearGrupo(nombreGrupo, "Descripción del grupo", this.usuarioLogueado);
                JOptionPane.showMessageDialog(this, "Grupo creado con éxito.");
                cargarGrupos(); // Recargar la lista para mostrar el nuevo grupo
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al crear el grupo: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_botonCrearGrupoActionPerformed

    private void botonUnirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUnirseActionPerformed
        int indiceSeleccionado = listaGrupos.getSelectedIndex();

        if (indiceSeleccionado != -1) { // Si hay un grupo seleccionado
            try {
                // Obtenemos el objeto Grupo completo de nuestra lista
                Grupo grupoSeleccionado = this.listaDeGruposCompleta.get(indiceSeleccionado);

                // Llamamos al servicio para unir al usuario logueado al grupo
                servicioGrupos.unirUsuarioAGrupo(grupoSeleccionado, this.usuarioLogueado);

                javax.swing.JOptionPane.showMessageDialog(this, "Te has unido al grupo: " + grupoSeleccionado.getNombre());

            } catch (Exception e) {
                // Manejo de error si el usuario ya está en el grupo (llave primaria duplicada)
                if (e.getMessage().contains("duplicada")) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ya eres miembro de este grupo.", "Información", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Error al unirse al grupo: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecciona un grupo de la lista.");
        }
    }//GEN-LAST:event_botonUnirseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCrearGrupo;
    private javax.swing.JButton botonUnirse;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaGrupos;
    // End of variables declaration//GEN-END:variables
}
