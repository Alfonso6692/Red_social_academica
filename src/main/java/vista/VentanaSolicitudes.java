/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.Conexion;
import servicios.ServiciosConexiones;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import modelo.Usuario;

public class VentanaSolicitudes extends javax.swing.JFrame {

    private final Usuario usuarioLogueado;
    private final ServiciosConexiones servicioConexiones;
    private java.util.List<Conexion> listaDeSolicitudes;
    private DefaultListModel<String> listModel;

    /**
     * Creates new form VentanaSolicitudes
     *
     * @param usuario
     */
    public VentanaSolicitudes(Usuario usuario) {
        this.usuarioLogueado = usuario;
        this.servicioConexiones = new ServiciosConexiones();
        this.listModel = new DefaultListModel<>();
        initComponents();
        this.setTitle("Solicitudes de Conexión Pendientes");
        this.setLocationRelativeTo(null); // Centra la ventana
        listaSolicitudes.setModel(listModel); // Conecta el modelo de datos con la lista visual

        cargarSolicitudes(); // Carga los datos al abrir la ventana

    }

    /**
     * Obtiene las solicitudes de la base de datos y las muestra en la lista.
     */
    private void cargarSolicitudes() {
        try {
            this.listaDeSolicitudes = servicioConexiones.obtenerSolicitudesPendientes(this.usuarioLogueado);
            listModel.clear(); // Limpia la lista antes de volver a cargarla

            if (this.listaDeSolicitudes.isEmpty()) {
                listModel.addElement("No tienes solicitudes pendientes.");
            } else {
                for (Conexion sol : this.listaDeSolicitudes) {
                    // Muestra el nombre del solicitante que guardamos en el DAO
                    listModel.addElement("Solicitud de: " + sol.getNombreSolicitante());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar solicitudes: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaSolicitudes = new javax.swing.JList<>();
        botonAceptar = new javax.swing.JButton();
        btnBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(listaSolicitudes);

        botonAceptar.setText("Aceptar Solicitud");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        btnBoton.setText("Cerrar");
        btnBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(botonAceptar)
                        .addGap(38, 38, 38)
                        .addComponent(btnBoton)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(btnBoton))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        int indiceSeleccionado = listaSolicitudes.getSelectedIndex();

        // Verificar que se haya seleccionado un elemento y que la lista no esté vacía
        if (indiceSeleccionado != -1 && !this.listaDeSolicitudes.isEmpty()) {
            try {
                // Obtener la solicitud completa de nuestra lista de respaldo
                Conexion solicitudSeleccionada = this.listaDeSolicitudes.get(indiceSeleccionado);

                // Llamar al servicio para aceptar la solicitud
                servicioConexiones.aceptarSolicitud(solicitudSeleccionada.getIdSolicitante(), this.usuarioLogueado.getId());

                JOptionPane.showMessageDialog(this, "¡Conexión aceptada!");

                // Volver a cargar la lista para que la solicitud aceptada desaparezca
                cargarSolicitudes();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al aceptar la solicitud: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una solicitud de la lista.");
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void btnBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBotonActionPerformed
                    this.dispose();
    }//GEN-LAST:event_btnBotonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton btnBoton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaSolicitudes;
    // End of variables declaration//GEN-END:variables
}
