package vista;

import java.util.List;
import modelo.Usuario;
import servicios.ServiciosConexiones;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class VentanaConexiones extends javax.swing.JFrame {

    private final Usuario usuarioLogueado;
    private DefaultListModel<String> listModel;
    private List<Usuario> listaDeAmigos; // <-- VARIABLE QUE FALTABA DECLARAR

    public VentanaConexiones(Usuario usuario) {
        this.usuarioLogueado = usuario;
        this.listModel = new DefaultListModel<>();
        initComponents();

        this.setTitle("Mis Conexiones");
        this.setLocationRelativeTo(null);
        listaConexiones.setModel(listModel);

        cargarConexiones();

        listaConexiones.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int indiceSeleccionado = listaConexiones.getSelectedIndex();
                if (indiceSeleccionado != -1) {
                    // Obtener el amigo seleccionado
                    Usuario amigo = listaDeAmigos.get(indiceSeleccionado);
                    String rutaFoto = amigo.getRutaFotoPerfil();

                    // Cargar y mostrar la imagen
                    if (rutaFoto != null && !rutaFoto.isEmpty()) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(rutaFoto);
                        // Escalar la imagen para que quepa en el JLabel
                        java.awt.Image img = icon.getImage().getScaledInstance(lblFotoPerfil.getWidth(), lblFotoPerfil.getHeight(), java.awt.Image.SCALE_SMOOTH);
                        lblFotoPerfil.setIcon(new javax.swing.ImageIcon(img));
                    } else {
                        // Si no tiene foto, limpiar el recuadro o poner una imagen por defecto
                        lblFotoPerfil.setIcon(null);
                    }
                }
            }
        });

    }

    private void cargarConexiones() {

        // La clase se llama ServicioConexiones, no ServiciosConexiones
        ServiciosConexiones servicio = new ServiciosConexiones();
        try {
            listModel.clear();

            // Asigna el resultado a tu nueva variable de clase
            this.listaDeAmigos = servicio.obtenerConexiones(this.usuarioLogueado);

            if (listaDeAmigos.isEmpty()) {
                listModel.addElement("Aún no tienes conexiones.");
            } else {
                for (Usuario amigo : listaDeAmigos) {
                    listModel.addElement(amigo.getNombre() + " " + amigo.getApellido());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar tus conexiones: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaConexiones = new javax.swing.JList<>();
        botonEnviarMensaje = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblFotoPerfil = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(listaConexiones);

        botonEnviarMensaje.setText("Enviar Mensaje");
        botonEnviarMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarMensajeActionPerformed(evt);
            }
        });

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblFotoPerfil.setAlignmentX(100.0F);
        lblFotoPerfil.setAlignmentY(100.0F);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(botonEnviarMensaje)
                        .addGap(58, 58, 58)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(lblFotoPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lblFotoPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEnviarMensaje)
                    .addComponent(jButton1))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void botonEnviarMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarMensajeActionPerformed
        int indiceSeleccionado = listaConexiones.getSelectedIndex();

        // Agregué una validación para cuando la lista está vacía
        if (indiceSeleccionado != -1 && !listaDeAmigos.isEmpty()) {
            // Obtenemos el amigo seleccionado de nuestra lista de respaldo
            Usuario amigoSeleccionado = listaDeAmigos.get(indiceSeleccionado);

            // Abre la ventana de chat, pasando el usuario logueado y el amigo seleccionado
            new VentanaChat(this.usuarioLogueado, amigoSeleccionado).setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una conexión para iniciar el chat.");
        }
    }//GEN-LAST:event_botonEnviarMensajeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEnviarMensaje;
    private javax.swing.JButton jButton1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFotoPerfil;
    private javax.swing.JList<String> listaConexiones;
    // End of variables declaration//GEN-END:variables
}
